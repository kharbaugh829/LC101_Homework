{"ast":null,"code":"var _jsxFileName = \"/Users/macstation1/Desktop/LC101_Homework/section16/src/components/BasicForm.js\",\n    _s = $RefreshSig$();\n\nimport useInput from \"../hooks/use-input\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst isNotEmpty = value => value.trim() !== \"\";\n\nconst isEmail = value => value.include(\"@\");\n\nconst BasicForm = props => {\n  _s();\n\n  const {\n    value: firstNameValue,\n    isValid: firstNameIsValid,\n    hasError: firstNameHasError,\n    valueChageHandler: firstNameChangeHandler,\n    inputBlurHandler: firstNameBlueHandler,\n    reset: resetFirstName\n  } = useInput(isNotEmpty);\n  const {\n    value: lastNameValue,\n    isValid: lastNameIsValid,\n    hasError: lastNameHasError,\n    valueChageHandler: lastNameChangeHandler,\n    inputBlurHandler: lastNameBlueHandler,\n    reset: resetLastName\n  } = useInput(isNotEmpty);\n  const {\n    value: emailValue,\n    isValid: emailIsValid,\n    hasError: emailHasError,\n    valueChageHandler: emailChangeHandler,\n    inputBlurHandler: emailBlueHandler,\n    reset: resetEmail\n  } = useInput(isEmail);\n  let formisValid = false;\n\n  if (firstNameIsValid && lastNameIsValid && emailIsValid) {\n    formisValid = true;\n  }\n\n  const firstNameClasses = firstNameHasError ? 'form-control invalid' : 'form-control';\n  const lastNameClasses = lastNameHasError ? 'form-control invalid' : 'form-control';\n  const emailClasses = emailHasError ? 'form-control invalid' : 'form-control';\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"control-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: firstNameClasses,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"First Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"name\",\n          value: firstNameValue,\n          onChange: firstNameChangeHandler,\n          onBlur: firstNameBlueHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), firstNameHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Please enter a first name.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 33\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: lastNameClasses,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"Last Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"name\",\n          value: lastNameValue,\n          onChange: lastNameChangeHandler,\n          onBlur: lastNameBlueHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), lastNameHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Please enter a last name.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 32\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: emailClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"E-Mail Address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        value: emailValue,\n        onChange: emailChangeHandler,\n        onBlur: emailBlueHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), emailHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter a valid e-mail.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 27\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !formIsValid,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n\n_s(BasicForm, \"KBY2rTHGcJY616rw8mVE9x3dnwQ=\", false, function () {\n  return [useInput, useInput, useInput];\n});\n\n_c = BasicForm;\nexport default BasicForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"BasicForm\");","map":{"version":3,"sources":["/Users/macstation1/Desktop/LC101_Homework/section16/src/components/BasicForm.js"],"names":["useInput","isNotEmpty","value","trim","isEmail","include","BasicForm","props","firstNameValue","isValid","firstNameIsValid","hasError","firstNameHasError","valueChageHandler","firstNameChangeHandler","inputBlurHandler","firstNameBlueHandler","reset","resetFirstName","lastNameValue","lastNameIsValid","lastNameHasError","lastNameChangeHandler","lastNameBlueHandler","resetLastName","emailValue","emailIsValid","emailHasError","emailChangeHandler","emailBlueHandler","resetEmail","formisValid","firstNameClasses","lastNameClasses","emailClasses","formIsValid"],"mappings":"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","sourcesContent":["import useInput from \"../hooks/use-input\";\nconst isNotEmpty = (value) => value.trim() !== \"\";\nconst isEmail = (value) => value.include(\"@\");\nconst BasicForm = (props) => {\n  const {\n    value: firstNameValue,\n    isValid: firstNameIsValid,\n    hasError: firstNameHasError,\n    valueChageHandler: firstNameChangeHandler,\n    inputBlurHandler: firstNameBlueHandler,\n    reset: resetFirstName,\n  } = useInput(isNotEmpty);\n\n  const {\n    value: lastNameValue,\n    isValid: lastNameIsValid,\n    hasError: lastNameHasError,\n    valueChageHandler: lastNameChangeHandler,\n    inputBlurHandler: lastNameBlueHandler,\n    reset: resetLastName,\n  } = useInput(isNotEmpty);\nconst\n { value: emailValue,\n    isValid: emailIsValid,\n    hasError: emailHasError,\n    valueChageHandler: emailChangeHandler,\n    inputBlurHandler: emailBlueHandler,\n    reset: resetEmail} = useInput(isEmail);\n\n    let formisValid = false;\n\n    if (firstNameIsValid && lastNameIsValid && emailIsValid){\n      formisValid = true;\n    }\n\n  const firstNameClasses = firstNameHasError ? 'form-control invalid' : 'form-control';\n  const lastNameClasses = lastNameHasError ? 'form-control invalid' : 'form-control';\n  const emailClasses = emailHasError ? 'form-control invalid' : 'form-control';\n\n  return (\n    <form>\n      <div className=\"control-group\">\n        <div className={firstNameClasses}>\n          <label htmlFor=\"name\">First Name</label>\n          <input type=\"text\" id=\"name\" value ={firstNameValue} onChange ={firstNameChangeHandler} onBlur={firstNameBlueHandler}/>\n          {firstNameHasError && <p>Please enter a first name.</p>}\n        </div>\n        <div className={lastNameClasses}>\n          <label htmlFor=\"name\">Last Name</label>\n          <input type=\"text\" id=\"name\"value ={lastNameValue} onChange ={lastNameChangeHandler} onBlur={lastNameBlueHandler} />\n          {lastNameHasError && <p>Please enter a last name.</p>}\n        </div>\n      </div>\n      <div className={emailClasses}>\n        <label htmlFor=\"name\">E-Mail Address</label>\n        <input type=\"text\" id=\"name\" value ={emailValue} onChange ={emailChangeHandler} onBlur={emailBlueHandler} />\n        {emailHasError && <p>Please enter a valid e-mail.</p>}\n      </div>\n      <div className=\"form-actions\">\n        <button disabled ={!formIsValid}>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default BasicForm;\n"]},"metadata":{},"sourceType":"module"}