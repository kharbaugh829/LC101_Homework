{"ast":null,"code":"var _jsxFileName = \"/Users/kharbaugh829/Documents/LaunchCode/LC101_Homework/09-time-to-practice-starting-code/src/components/comments/Comments.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router';\nimport classes from './Comments.module.css';\nimport NewCommentForm from './NewCommentForm';\nimport useHttp from '../../hooks/use-http';\nimport { getAllComments } from '../../lib/api';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport CommentsList from './CommentsList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Comments = () => {\n  _s();\n\n  const [isAddingComment, setIsAddingComment] = useState(false);\n  const params = useParams();\n  const {\n    quoteId\n  } = params;\n  const {\n    sendRequest,\n    status,\n    data: loadedComments\n  } = useHttp(getAllComments);\n  useEffect(() => {\n    sendRequest(quoteId);\n  }, [quoteId, sendRequest]);\n\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n\n  const addCommentHandler = () => {};\n\n  let comments;\n\n  if (status === 'pending') {\n    comments = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"centered\",\n      children: /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 40\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 12\n    }, this);\n  }\n\n  if (status === 'completed' && (!loadedComments || loadedComments.length > 0)) {\n    comments = /*#__PURE__*/_jsxDEV(CommentsList, {\n      comments: loadedComments\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this);\n  }\n\n  if (status === 'completed' && (!loadedComments || loadedComments.length === 0)) {\n    comments = /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"centered\",\n      children: \" No Comments were added yet!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 14\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.comments,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"User Comments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), !isAddingComment && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn\",\n      onClick: startAddCommentHandler,\n      children: \"Add a Comment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this), isAddingComment && /*#__PURE__*/_jsxDEV(NewCommentForm, {\n      quoteId: params.quoteId,\n      onAddedComment: addCommentHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 27\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Comments...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), comments]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Comments, \"cAdxTXicSJO0DxVZ1z2wKUuR/Is=\", false, function () {\n  return [useParams, useHttp];\n});\n\n_c = Comments;\nexport default Comments;\n\nvar _c;\n\n$RefreshReg$(_c, \"Comments\");","map":{"version":3,"sources":["/Users/kharbaugh829/Documents/LaunchCode/LC101_Homework/09-time-to-practice-starting-code/src/components/comments/Comments.js"],"names":["useEffect","useState","useParams","classes","NewCommentForm","useHttp","getAllComments","LoadingSpinner","CommentsList","Comments","isAddingComment","setIsAddingComment","params","quoteId","sendRequest","status","data","loadedComments","startAddCommentHandler","addCommentHandler","comments","length"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,SAAT,QAA0B,cAA1B;AAEA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,SAAQC,cAAR,QAA6B,eAA7B;AACA,OAAOC,cAAP,MAA2B,sBAA3B;AACA,OAAOC,YAAP,MAAyB,gBAAzB;;;AAGA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACrB,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCV,QAAQ,CAAC,KAAD,CAAtD;AAEA,QAAMW,MAAM,GAAGV,SAAS,EAAxB;AACF,QAAM;AAACW,IAAAA;AAAD,MAAYD,MAAlB;AACA,QAAM;AAACE,IAAAA,WAAD;AAAcC,IAAAA,MAAd;AAAsBC,IAAAA,IAAI,EAAEC;AAA5B,MAA+CZ,OAAO,CAACC,cAAD,CAA5D;AAEAN,EAAAA,SAAS,CAAC,MAAM;AAChBc,IAAAA,WAAW,CAACD,OAAD,CAAX;AACC,GAFQ,EAEN,CAACA,OAAD,EAAUC,WAAV,CAFM,CAAT;;AAIE,QAAMI,sBAAsB,GAAG,MAAM;AACnCP,IAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACD,GAFD;;AAGA,QAAMQ,iBAAiB,GAAG,MAAM,CAAE,CAAlC;;AACA,MAAIC,QAAJ;;AAEF,MAAGL,MAAM,KAAI,SAAb,EAAuB;AACvBK,IAAAA,QAAQ,gBAAG;AAAK,MAAA,SAAS,EAAG,UAAjB;AAAA,6BAA4B,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAA5B;AAAA;AAAA;AAAA;AAAA,YAAX;AACC;;AAED,MAAIL,MAAM,KAAK,WAAX,KAA2B,CAACE,cAAD,IAAmBA,cAAc,CAACI,MAAf,GAAuB,CAArE,CAAJ,EAA6E;AAC5ED,IAAAA,QAAQ,gBAAG,QAAC,YAAD;AAAc,MAAA,QAAQ,EAAGH;AAAzB;AAAA;AAAA;AAAA;AAAA,YAAX;AACA;;AACD,MAAIF,MAAM,KAAK,WAAX,KAA2B,CAACE,cAAD,IAAmBA,cAAc,CAACI,MAAf,KAA0B,CAAxE,CAAJ,EAA+E;AAC7ED,IAAAA,QAAQ,gBAAG;AAAG,MAAA,SAAS,EAAE,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAX;AACD;;AACC,sBACE;AAAS,IAAA,SAAS,EAAEjB,OAAO,CAACiB,QAA5B;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEG,CAACV,eAAD,iBACC;AAAQ,MAAA,SAAS,EAAC,KAAlB;AAAwB,MAAA,OAAO,EAAEQ,sBAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ,EAOGR,eAAe,iBAAI,QAAC,cAAD;AAAgB,MAAA,OAAO,EAAEE,MAAM,CAACC,OAAhC;AAAyC,MAAA,cAAc,EAAEM;AAAzD;AAAA;AAAA;AAAA;AAAA,YAPtB,eAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YARF,EASGC,QATH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAaD,CAxCD;;GAAMX,Q;UAGWP,S,EAEoCG,O;;;KAL/CI,Q;AA0CN,eAAeA,QAAf","sourcesContent":["import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router';\n\nimport classes from './Comments.module.css';\nimport NewCommentForm from './NewCommentForm';\nimport useHttp from '../../hooks/use-http';\nimport {getAllComments} from '../../lib/api';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport CommentsList from './CommentsList';\n\n\nconst Comments = () => {\n  const [isAddingComment, setIsAddingComment] = useState(false);\n\n  const params = useParams();\nconst {quoteId} = params;\nconst {sendRequest, status, data: loadedComments } = useHttp(getAllComments);\n\nuseEffect(() => {\nsendRequest(quoteId)\n}, [quoteId, sendRequest])\n\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n  const addCommentHandler = () => {};\n  let comments;\n\nif(status ==='pending'){\ncomments = <div className = \"centered\"><LoadingSpinner /></div>\n}\n\nif (status === 'completed' && (!loadedComments || loadedComments.length >0 )){\n comments = <CommentsList comments ={loadedComments}/>\n}\nif (status === 'completed' && (!loadedComments || loadedComments.length === 0)){\n  comments = <p className ='centered'> No Comments were added yet!</p>\n}\n  return (\n    <section className={classes.comments}>\n      <h2>User Comments</h2>\n      {!isAddingComment && (\n        <button className='btn' onClick={startAddCommentHandler}>\n          Add a Comment\n        </button>\n      )}\n      {isAddingComment && <NewCommentForm quoteId={params.quoteId} onAddedComment={addCommentHandler}/>}\n      <p>Comments...</p>\n      {comments}\n    </section>\n  );\n};\n\nexport default Comments;\n"]},"metadata":{},"sourceType":"module"}